/*
 * generated by Xtext 2.32.0
 */
grammar InternalSchemaTable;

options {
	superClass=AbstractInternalAntlrParser;
}

@lexer::header {
package xtext.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package xtext.parser.antlr.internal;

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.common.util.Enumerator;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import xtext.services.SchemaTableGrammarAccess;

}

@parser::members {

 	private SchemaTableGrammarAccess grammarAccess;

    public InternalSchemaTableParser(TokenStream input, SchemaTableGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }

    @Override
    protected String getFirstRuleName() {
    	return "Table";
   	}

   	@Override
   	protected SchemaTableGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}

}

@rulecatch {
    catch (RecognitionException re) {
        recover(input,re);
        appendSkippedTokens();
    }
}

// Entry rule entryRuleTable
entryRuleTable returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTableRule()); }
	iv_ruleTable=ruleTable
	{ $current=$iv_ruleTable.current; }
	EOF;

// Rule Table
ruleTable returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Table'
		{
			newLeafNode(otherlv_0, grammarAccess.getTableAccess().getTableKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getTableAccess().getNomEStringParserRuleCall_1_0());
				}
				lv_nom_1_0=ruleEString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getTableRule());
					}
					set(
						$current,
						"nom",
						lv_nom_1_0,
						"xtext.SchemaTable.EString");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getTableAccess().getLeftCurlyBracketKeyword_2());
		}
		otherlv_3='colonnes'
		{
			newLeafNode(otherlv_3, grammarAccess.getTableAccess().getColonnesKeyword_3());
		}
		otherlv_4='{'
		{
			newLeafNode(otherlv_4, grammarAccess.getTableAccess().getLeftCurlyBracketKeyword_4());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getTableAccess().getColonneDataColonneParserRuleCall_5_0());
				}
				lv_colonneData_5_0=ruleColonne
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getTableRule());
					}
					add(
						$current,
						"colonneData",
						lv_colonneData_5_0,
						"xtext.SchemaTable.Colonne");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_6=','
			{
				newLeafNode(otherlv_6, grammarAccess.getTableAccess().getCommaKeyword_6_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getTableAccess().getColonneDataColonneParserRuleCall_6_1_0());
					}
					lv_colonneData_7_0=ruleColonne
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getTableRule());
						}
						add(
							$current,
							"colonneData",
							lv_colonneData_7_0,
							"xtext.SchemaTable.Colonne");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
		otherlv_8='}'
		{
			newLeafNode(otherlv_8, grammarAccess.getTableAccess().getRightCurlyBracketKeyword_7());
		}
		(
			otherlv_9='contraintes'
			{
				newLeafNode(otherlv_9, grammarAccess.getTableAccess().getContraintesKeyword_8_0());
			}
			otherlv_10='{'
			{
				newLeafNode(otherlv_10, grammarAccess.getTableAccess().getLeftCurlyBracketKeyword_8_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getTableAccess().getAlgoContrainteAlgorithmeParserRuleCall_8_2_0());
					}
					lv_algoContrainte_11_0=ruleAlgorithme
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getTableRule());
						}
						add(
							$current,
							"algoContrainte",
							lv_algoContrainte_11_0,
							"xtext.SchemaTable.Algorithme");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_12=','
				{
					newLeafNode(otherlv_12, grammarAccess.getTableAccess().getCommaKeyword_8_3_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getTableAccess().getAlgoContrainteAlgorithmeParserRuleCall_8_3_1_0());
						}
						lv_algoContrainte_13_0=ruleAlgorithme
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getTableRule());
							}
							add(
								$current,
								"algoContrainte",
								lv_algoContrainte_13_0,
								"xtext.SchemaTable.Algorithme");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
			otherlv_14='}'
			{
				newLeafNode(otherlv_14, grammarAccess.getTableAccess().getRightCurlyBracketKeyword_8_4());
			}
		)?
		otherlv_15='}'
		{
			newLeafNode(otherlv_15, grammarAccess.getTableAccess().getRightCurlyBracketKeyword_9());
		}
	)
;

// Entry rule entryRuleColonne
entryRuleColonne returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getColonneRule()); }
	iv_ruleColonne=ruleColonne
	{ $current=$iv_ruleColonne.current; }
	EOF;

// Rule Colonne
ruleColonne returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getColonneAccess().getColonne_ImplParserRuleCall_0());
		}
		this_Colonne_Impl_0=ruleColonne_Impl
		{
			$current = $this_Colonne_Impl_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getColonneAccess().getColonneDeriveeParserRuleCall_1());
		}
		this_ColonneDerivee_1=ruleColonneDerivee
		{
			$current = $this_ColonneDerivee_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getColonneAccess().getColonneEtrangereParserRuleCall_2());
		}
		this_ColonneEtrangere_2=ruleColonneEtrangere
		{
			$current = $this_ColonneEtrangere_2.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getColonneAccess().getColonneIdentifiantsParserRuleCall_3());
		}
		this_ColonneIdentifiants_3=ruleColonneIdentifiants
		{
			$current = $this_ColonneIdentifiants_3.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleColonne_Impl
entryRuleColonne_Impl returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getColonne_ImplRule()); }
	iv_ruleColonne_Impl=ruleColonne_Impl
	{ $current=$iv_ruleColonne_Impl.current; }
	EOF;

// Rule Colonne_Impl
ruleColonne_Impl returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='c'
		{
			newLeafNode(otherlv_0, grammarAccess.getColonne_ImplAccess().getCKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getColonne_ImplAccess().getNomEStringParserRuleCall_1_0());
				}
				lv_nom_1_0=ruleEString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getColonne_ImplRule());
					}
					set(
						$current,
						"nom",
						lv_nom_1_0,
						"xtext.SchemaTable.EString");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleEString
entryRuleEString returns [String current=null]:
	{ newCompositeNode(grammarAccess.getEStringRule()); }
	iv_ruleEString=ruleEString
	{ $current=$iv_ruleEString.current.getText(); }
	EOF;

// Rule EString
ruleEString returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		this_STRING_0=RULE_STRING
		{
			$current.merge(this_STRING_0);
		}
		{
			newLeafNode(this_STRING_0, grammarAccess.getEStringAccess().getSTRINGTerminalRuleCall_0());
		}
		    |
		this_ID_1=RULE_ID
		{
			$current.merge(this_ID_1);
		}
		{
			newLeafNode(this_ID_1, grammarAccess.getEStringAccess().getIDTerminalRuleCall_1());
		}
	)
;

// Entry rule entryRuleAlgorithme
entryRuleAlgorithme returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAlgorithmeRule()); }
	iv_ruleAlgorithme=ruleAlgorithme
	{ $current=$iv_ruleAlgorithme.current; }
	EOF;

// Rule Algorithme
ruleAlgorithme returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Algorithme'
		{
			newLeafNode(otherlv_0, grammarAccess.getAlgorithmeAccess().getAlgorithmeKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getAlgorithmeAccess().getNomEStringParserRuleCall_1_0());
				}
				lv_nom_1_0=ruleEString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getAlgorithmeRule());
					}
					set(
						$current,
						"nom",
						lv_nom_1_0,
						"xtext.SchemaTable.EString");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getAlgorithmeAccess().getLeftCurlyBracketKeyword_2());
		}
		otherlv_3='ressource'
		{
			newLeafNode(otherlv_3, grammarAccess.getAlgorithmeAccess().getRessourceKeyword_3());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getAlgorithmeAccess().getRessourceEStringParserRuleCall_4_0());
				}
				lv_ressource_4_0=ruleEString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getAlgorithmeRule());
					}
					set(
						$current,
						"ressource",
						lv_ressource_4_0,
						"xtext.SchemaTable.EString");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_5='documentation'
			{
				newLeafNode(otherlv_5, grammarAccess.getAlgorithmeAccess().getDocumentationKeyword_5_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getAlgorithmeAccess().getDocumentationEStringParserRuleCall_5_1_0());
					}
					lv_documentation_6_0=ruleEString
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getAlgorithmeRule());
						}
						set(
							$current,
							"documentation",
							lv_documentation_6_0,
							"xtext.SchemaTable.EString");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		(
			otherlv_7='langage'
			{
				newLeafNode(otherlv_7, grammarAccess.getAlgorithmeAccess().getLangageKeyword_6_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getAlgorithmeAccess().getLangageLangageEnumRuleCall_6_1_0());
					}
					lv_langage_8_0=ruleLangage
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getAlgorithmeRule());
						}
						set(
							$current,
							"langage",
							lv_langage_8_0,
							"xtext.SchemaTable.Langage");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		(
			otherlv_9='entree'
			{
				newLeafNode(otherlv_9, grammarAccess.getAlgorithmeAccess().getEntreeKeyword_7_0());
			}
			otherlv_10='{'
			{
				newLeafNode(otherlv_10, grammarAccess.getAlgorithmeAccess().getLeftCurlyBracketKeyword_7_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getAlgorithmeAccess().getEntreeEStringParserRuleCall_7_2_0());
					}
					lv_entree_11_0=ruleEString
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getAlgorithmeRule());
						}
						add(
							$current,
							"entree",
							lv_entree_11_0,
							"xtext.SchemaTable.EString");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_12=','
				{
					newLeafNode(otherlv_12, grammarAccess.getAlgorithmeAccess().getCommaKeyword_7_3_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getAlgorithmeAccess().getEntreeEStringParserRuleCall_7_3_1_0());
						}
						lv_entree_13_0=ruleEString
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getAlgorithmeRule());
							}
							add(
								$current,
								"entree",
								lv_entree_13_0,
								"xtext.SchemaTable.EString");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
			otherlv_14='}'
			{
				newLeafNode(otherlv_14, grammarAccess.getAlgorithmeAccess().getRightCurlyBracketKeyword_7_4());
			}
		)?
		otherlv_15='sortie'
		{
			newLeafNode(otherlv_15, grammarAccess.getAlgorithmeAccess().getSortieKeyword_8());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getAlgorithmeAccess().getSortieEStringParserRuleCall_9_0());
				}
				lv_sortie_16_0=ruleEString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getAlgorithmeRule());
					}
					set(
						$current,
						"sortie",
						lv_sortie_16_0,
						"xtext.SchemaTable.EString");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_17='}'
		{
			newLeafNode(otherlv_17, grammarAccess.getAlgorithmeAccess().getRightCurlyBracketKeyword_10());
		}
	)
;

// Entry rule entryRuleColonneDerivee
entryRuleColonneDerivee returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getColonneDeriveeRule()); }
	iv_ruleColonneDerivee=ruleColonneDerivee
	{ $current=$iv_ruleColonneDerivee.current; }
	EOF;

// Rule ColonneDerivee
ruleColonneDerivee returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='c_deriv'
		{
			newLeafNode(otherlv_0, grammarAccess.getColonneDeriveeAccess().getC_derivKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getColonneDeriveeAccess().getNomEStringParserRuleCall_1_0());
				}
				lv_nom_1_0=ruleEString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getColonneDeriveeRule());
					}
					set(
						$current,
						"nom",
						lv_nom_1_0,
						"xtext.SchemaTable.EString");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_2='algo'
		{
			newLeafNode(otherlv_2, grammarAccess.getColonneDeriveeAccess().getAlgoKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getColonneDeriveeAccess().getAlgorithmeAlgorithmeParserRuleCall_3_0());
				}
				lv_algorithme_3_0=ruleAlgorithme
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getColonneDeriveeRule());
					}
					set(
						$current,
						"algorithme",
						lv_algorithme_3_0,
						"xtext.SchemaTable.Algorithme");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleColonneEtrangere
entryRuleColonneEtrangere returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getColonneEtrangereRule()); }
	iv_ruleColonneEtrangere=ruleColonneEtrangere
	{ $current=$iv_ruleColonneEtrangere.current; }
	EOF;

// Rule ColonneEtrangere
ruleColonneEtrangere returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='c_etr'
		{
			newLeafNode(otherlv_0, grammarAccess.getColonneEtrangereAccess().getC_etrKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getColonneEtrangereAccess().getNomEStringParserRuleCall_1_0());
				}
				lv_nom_1_0=ruleEString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getColonneEtrangereRule());
					}
					set(
						$current,
						"nom",
						lv_nom_1_0,
						"xtext.SchemaTable.EString");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_2='id'
		{
			newLeafNode(otherlv_2, grammarAccess.getColonneEtrangereAccess().getIdKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getColonneEtrangereAccess().getIdColonneTableEtrangereEStringParserRuleCall_3_0());
				}
				lv_idColonneTableEtrangere_3_0=ruleEString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getColonneEtrangereRule());
					}
					set(
						$current,
						"idColonneTableEtrangere",
						lv_idColonneTableEtrangere_3_0,
						"xtext.SchemaTable.EString");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_4='from'
		{
			newLeafNode(otherlv_4, grammarAccess.getColonneEtrangereAccess().getFromKeyword_4());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getColonneEtrangereRule());
					}
				}
				{
					newCompositeNode(grammarAccess.getColonneEtrangereAccess().getTableEtrangereTableCrossReference_5_0());
				}
				ruleEString
				{
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleColonneIdentifiants
entryRuleColonneIdentifiants returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getColonneIdentifiantsRule()); }
	iv_ruleColonneIdentifiants=ruleColonneIdentifiants
	{ $current=$iv_ruleColonneIdentifiants.current; }
	EOF;

// Rule ColonneIdentifiants
ruleColonneIdentifiants returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='c_id'
		{
			newLeafNode(otherlv_0, grammarAccess.getColonneIdentifiantsAccess().getC_idKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getColonneIdentifiantsAccess().getNomEStringParserRuleCall_1_0());
				}
				lv_nom_1_0=ruleEString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getColonneIdentifiantsRule());
					}
					set(
						$current,
						"nom",
						lv_nom_1_0,
						"xtext.SchemaTable.EString");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Rule Langage
ruleLangage returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0='PYTHON'
			{
				$current = grammarAccess.getLangageAccess().getPYTHONEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getLangageAccess().getPYTHONEnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1='INTERNE'
			{
				$current = grammarAccess.getLangageAccess().getINTERNEEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getLangageAccess().getINTERNEEnumLiteralDeclaration_1());
			}
		)
	)
;

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
