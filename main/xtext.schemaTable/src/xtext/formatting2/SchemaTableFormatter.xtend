/*
 * generated by Xtext 2.32.0
 */
package xtext.formatting2

import com.google.inject.Inject
import org.eclipse.xtext.formatting2.AbstractFormatter2
import org.eclipse.xtext.formatting2.IFormattableDocument
import schemaTable.ColonneDerivee
import schemaTable.Table
import xtext.services.SchemaTableGrammarAccess

class SchemaTableFormatter extends AbstractFormatter2 {
	
	@Inject extension SchemaTableGrammarAccess

	def dispatch void format(Table table, extension IFormattableDocument document) {
		// TODO: format HiddenRegions around keywords, attributes, cross references, etc. 
		for (colonne : table.colonneData) {
			colonne.format
		}
		for (algorithme : table.algoContrainte) {
			algorithme.format
		}
	}

	def dispatch void format(ColonneDerivee colonneDerivee, extension IFormattableDocument document) {
		// TODO: format HiddenRegions around keywords, attributes, cross references, etc. 
		colonneDerivee.algorithme.format
	}
	
}
